<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhLAGPAPeFAJ+tvv/GnP/8+fn7/P/y6ens8Pb4+v/69f+ua3CHo0lqjv+dQv/k0dLY4P/VuLrD
        0P++jZChtf+TJjFZg/f5+//79/+rSVR8n/f5+v+rR12DpP+mPP/8+FF6nUdymP/79vT2+P/49Pj6+0l0
        mf+qRv/58v+mPv+mPVJ6nvP2+P+wU0hzmP/58/r7/P/69PT2+f+rSFN7nvX3+f/9+sbO2F55mf/Oqv/c
        xf+lWKy4x0x2ml6EpE13m/+oQVV8n1d+oP+oQv+sSv+tTP+xVP+qRVB5nYGUrP/r3f+2ff+uTt7i6Fh/
        of+vUEp0mU53m1qBokt1mv+nP1uBo/+lO1yCo/+wUkdyl/+pQ/+nQP+vUU94nFmAov+pRP+uT/+sS/+t
        TVZ9oFd/oRdNfP+OCNzk6/H09/+8bf/u2v+0W//58fL1+B9Tgf+XHf/ZrLHD03aWssrX4V+Epf/lxypc
        h/+xVWWJqJWtw/+SEf/48P/LjhFIeXybtf+/dPv8/f/9+/+NB/+LAhZMfP////+KAA9HeP///wAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEAAAAh/wtYTVAgRGF0YVhNUDw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0i
        VzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0
        YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuNi1jMTM4IDc5LjE1OTgyNCwgMjAxNi8wOS8xNC0w
        MTowOTowMSAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5
        LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6
        eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFk
        b2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEu
        MC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENDIDIw
        MTcgKFdpbmRvd3MpIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjMwOEJFODE5NEQzMTExRTdCRDJB
        QjAxMkI1QjQwNEMyIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjMwOEJFODFBNEQzMTExRTdCRDJB
        QjAxMkI1QjQwNEMyIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6
        MzA4QkU4MTc0RDMxMTFFN0JEMkFCMDEyQjVCNDA0QzIiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6
        MzA4QkU4MTg0RDMxMTFFN0JEMkFCMDEyQjVCNDA0QzIiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRm
        OlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz4B//79/Pv6+fj39vX08/Lx8O/u7ezr
        6uno5+bl5OPi4eDf3t3c29rZ2NfW1dTT0tHQz87NzMvKycjHxsXEw8LBwL++vby7urm4t7a1tLOysbCv
        rq2sq6qpqKempaSjoqGgn56dnJuamZiXlpWUk5KRkI+OjYyLiomIh4aFhIOCgYB/fn18e3p5eHd2dXRz
        cnFwb25tbGtqaWhnZmVkY2JhYF9eXVxbWllYV1ZVVFNSUVBPTk1MS0pJSEdGRURDQkFAPz49PDs6OTg3
        NjU0MzIxMC8uLSwrKikoJyYlJCMiISAfHh0cGxoZGBcWFRQTEhEQDw4NDAsKCQgHBgUEAwIBAAAh+QQF
        MgCFACwAAAAALAGPAAAI/wAHCRxIsKDBgwgTKlzIsKHDhxAjSpxIsaLFixf5oMHIsaPHjyBDihxJkiGa
        QjOGlFzJsqXLlzBZDvFTCKXKmDhz6tzJU+SQGTVrpuxJtKjRozx/Bg06QwXSp1CjSp2odClTp1Ozat2K
        tKrVq1zDih27UgXQr1abkl3Ltm1Es2jRCsDqtq5dt3DjyqV7t6/fqXn17v1LuHBRFQIEC55ruLFjl4gV
        KxZQ5bHlyx4jS55cGbPnzw81b+YMurTpglUSj95M+bTrz6lXrxaQ5bVtx7Flz659u3ff3Lp3+x7eNovq
        4LJpE18e1jhy5AKYMJ8u1flz6NKpay9q/Tr27eB1Mv857v17+PMtx5cvL6AL+vcj1a9n7x6+fY7y59O/
        z59iF/L6eddefwQ69F+AAQqQRIEMInQgggku2OCEgyQBIITrKUghgxZiiKGGG/LXoYcffjFVAIKkmCIB
        FgVgg4opHhEAAhLhEAADMAriQAALLLRAjoLQSBCKOfaIkAM5MrDViCSWKBWRKrI40YtAwkgAEg7hgGOV
        Kt5g5EE/5ijkQFCq6EBCSMKoZFZMNukkVGUKIiVEOBDAJZA3MBTnnSGMWVCYMPo5yJ6CSHBkkll9caGb
        CAogBJw5zpllCHdWuSZChFaKA5hACkpoAIeqOZWijDLq6FNxSsqQBHZWWqUNCCH/4KqlnIpZEKEhGGpQ
        mipe+hSppZr66FGpQsRrlKAKtMCxKgoqUKtqYikQBNA2axCg1g7JZbIFMevrUUIsGuyHwxZVrEMSAHmE
        rgTJmmOeBSGBp0Gs5gjrn53eymWuuyL6VLjjjnuquZE+tOeX+ubIrkBUqsivQXF+Owi2KXp6J7cDefuv
        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
</value>
  </data>
</root>